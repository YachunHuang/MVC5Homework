@using PagedList
@using PagedList.Mvc
@model IEnumerable<MVC5Homework.Models.客戶銀行資訊>

@{
    ViewBag.Title = "客戶銀行資訊Index";
}

<h2>客戶銀行資訊Index</h2>
@using (Html.BeginForm("客戶銀行資訊Index", "客戶銀行資訊", FormMethod.Get, new { name = "form3" }))
{
    @Html.Hidden("sortOrder")
    @Html.Hidden("page")
    <p>
        <table>
            <tr>
                @{
                    if (Context.User.IsInRole("board_admin"))
                    {
                        <td>@Html.ActionLink("Create New", "客戶銀行資訊Create") |</td>
                    }
                }

                <td><input class="form-control" id="txtKeyword" name="keyword" type="text" /></td>
                <td>
                    <input type="submit" class="btn btn-default" value="Search" formaction="@Url.Action("客戶銀行資訊Index")">|
                </td>
                <td>
                    <input type="submit" class="btn btn-default" value="Export" formaction="@Url.Action("ExportData")" />|
                </td>
            </tr>
        </table>
    </p>

    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.客戶資料.客戶名稱)
            </th>
            <th>
                <a href="@Url.Action("客戶銀行資訊Index","客戶銀行資訊")" onclick="return MakeSort('@ViewBag.NameSortParm');">
                    @Html.DisplayNameFor(model => model.銀行名稱)
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.銀行代碼)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.分行代碼)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.帳戶名稱)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.帳戶號碼)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.客戶資料.客戶名稱)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.銀行名稱)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.銀行代碼)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.分行代碼)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.帳戶名稱)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.帳戶號碼)
                </td>
                @{
                    if (Context.User.IsInRole("board_admin"))
                    {
                        <td>
                            @Html.ActionLink("Edit", "客戶銀行資訊Edit", new { id = item.Id }) |
                            @Html.ActionLink("Details", "客戶銀行資訊Details", new { id = item.Id }) |
                            @Html.ActionLink("Delete", "客戶銀行資訊Delete", new { id = item.Id })
                        </td>
                    }
                }
            </tr>
                    }

    </table>
    @Html.PagedListPager(Model as IPagedList, page => Url.Action("客戶銀行資訊Index", new { page }))
}

@section scripts {

    <script>
        $(function () {
            $('.pagination-container a').on('click', function () {
                var href = $(this).attr('href');
                var pars = href.substring(href.indexOf('?page=') + 6);
                document.form1.page.value = pars;
                document.form1.submit();
                return false;
            })
        })

        function MakeSort(column) {
            document.form3.sortOrder.value = column;
            document.form3.submit();
            return false;
        }
    </script>
}

@section breadcrumb
{
    <li>
        <a href="@Url.Action("客戶銀行資訊Index","客戶銀行資訊")">客戶銀行資訊</a>
        <i class="icon-angle-right"></i>
    </li>
}